{"version":3,"sources":["useDetectOutsideClick.js","dropDown.js","newBTN.js","Assign.js","inputPart.js","Buttons.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["useDetectOutsideClick","el","initialState","useState","isActive","setIsActive","useEffect","onClick","e","current","contains","target","window","addEventListener","removeEventListener","Button","dropdownRef","useRef","className","ref","InputSet","props","handleChangeCorrect","value","length","setState","message","handleChangeInCoorect","message1","console","log","state","type","name","disabled","placeholder","onChange","this","Component","Buttons","Forms","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"iQAOaA,G,KAAwB,SAACC,EAAIC,GAAkB,IAAD,EACzBC,mBAASD,GADgB,mBAClDE,EADkD,KACxCC,EADwC,KAqBzD,OAlBAC,qBAAU,WACR,IAAMC,EAAU,SAAAC,GAEK,OAAfP,EAAGQ,SAAqBR,EAAGQ,QAAQC,SAASF,EAAEG,SAChDN,GAAaD,IASjB,OAJIA,GACFQ,OAAOC,iBAAiB,QAASN,GAG5B,WACLK,OAAOE,oBAAoB,QAASP,MAErC,CAACH,EAAUH,IAEP,CAACG,EAAUC,KCrBL,SAASU,IACtB,IAAMC,EAAcC,iBAAO,MADI,EAECjB,EAAsBgB,GAAa,GAFpC,mBAExBZ,EAFwB,KAEdC,EAFc,KAGzBE,EAAU,kBAAMF,GAAaD,IAEnC,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKX,QAASA,EAASW,UAAS,uBAAkBd,EAAW,UAAY,KACvE,oFAGF,yBACEe,IAAKH,EACLE,UAAS,eAAUd,EAAW,SAAW,aAEzC,4BACE,wBAAOG,QAASA,EAASW,UAAS,WAAMd,EAAW,SAAW,aAA9D,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,2BCvBG,SAASW,IACtB,IAAMC,EAAcC,iBAAO,MADI,EAECjB,EAAsBgB,GAAa,GAFpC,mBAExBZ,EAFwB,KAEdC,EAFc,KAGzBE,EAAU,kBAAMF,GAAaD,IAEnC,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKX,QAASA,EAASW,UAAS,uBAAkBd,EAAW,UAAY,KACvE,oFAGF,yBACEe,IAAKH,EACLE,UAAS,eAAUd,EAAW,SAAW,aAEzC,4BACE,wBAAOG,QAASA,EAASW,UAAS,WAAMd,EAAW,SAAW,aAA9D,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,2BCvBG,SAASW,IACtB,IAAMC,EAAcC,iBAAO,MADI,EAECjB,EAAsBgB,GAAa,GAFpC,mBAExBZ,EAFwB,KAEdC,EAFc,KAGzBE,EAAU,kBAAMF,GAAaD,IAEnC,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKX,QAASA,EAASW,UAAS,uBAAkBd,EAAW,UAAY,KACvE,oFAGF,yBACEe,IAAKH,EACLE,UAAS,eAAUd,EAAW,SAAW,aAEzC,4BACE,wBAAOG,QAASA,EAASW,UAAS,WAAMd,EAAW,SAAW,aAA9D,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,wBAGA,wBAAKc,UAAS,WAAMd,EAAW,SAAW,aAA1C,2B,gCCxBSgB,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,oBAAsB,SAACd,GACfA,EAAEG,OAAOY,MAAMC,QAAU,GAEzB,EAAKC,SAAS,CAAEC,SAAS,IAEC,IAA1BlB,EAAEG,OAAOY,MAAMC,QAEf,EAAKC,SAAS,CAAEC,SAAS,KAdd,EAkBnBC,sBAAwB,SAACnB,GACjBA,EAAEG,OAAOY,MAAMC,QAAU,GAEzB,EAAKC,SAAS,CAAEG,UAAU,IAEA,IAA1BpB,EAAEG,OAAOY,MAAMC,QAEf,EAAKC,SAAS,CAAEG,UAAU,IAE9BC,QAAQC,IAAI,UAAWtB,EAAEG,OAAOY,QAzBhC,EAAKQ,MAAQ,CACTH,UAAU,EACVF,SAAS,GAJE,E,qDA+Bf,OACI,oCACI,yBAAKR,UAAU,YACf,yBAAKA,UAAU,IACP,2BAAOc,KAAK,OAAOC,KAAK,OAAOf,UAAU,WAAWgB,UAAQ,EAACC,YAAY,gFAG7E,yBAAKjB,UAAU,IACX,2BAAOc,KAAK,OAAOC,KAAK,OAAOf,UAAU,WAAWiB,YAAY,gFAIpE,yBAAKjB,UAAU,YACX,2BAAOc,KAAK,OAAOI,SAAUC,KAAKf,oBAAqBW,KAAK,OAAOf,UAAS,mBAAcmB,KAAKN,MAAML,QAAU,WAAa,IAAMS,YAAY,+EAClJ,uBAAGjB,UAAS,WAAMmB,KAAKN,MAAML,QAAU,WAAa,KAAOW,KAAKN,MAAML,QAAU,iCAAU,KAE1F,yBAAKR,UAAU,YACX,2BAAOc,KAAK,OAAOI,SAAUC,KAAKV,sBAAuBM,KAAK,OAAOf,UAAS,qBAAgBmB,KAAKN,MAAMH,SAAW,aAAe,IAAMO,YAAY,+EAErJ,uBAAGjB,UAAS,WAAMmB,KAAKN,MAAMH,SAAW,aAAe,KAAOS,KAAKN,MAAMH,SAAW,iCAAU,MAItG,8BAAUV,UAAU,WAAWiB,YAAY,oF,GAvDrBG,aCHjBC,E,kDACjB,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,GAFE,E,qDASf,OACI,oCACA,yBAAKb,UAAU,aACf,sCACE,4BAAQA,UAAU,UAAlB,SAGA,4BAAQA,UAAU,SAAlB,SAGA,4BAAQA,UAAU,OAAlB,SAGA,4BAAQA,UAAU,SAAlB,SAGA,4BAAQA,UAAU,UAAlB,SAGA,4BAAQgB,UAAQ,EAAChB,UAAU,aAI7B,yBAAKA,UAAU,aACf,wCAEE,4BAAQA,UAAU,YAAlB,SAIA,4BAAQA,UAAU,WAAlB,SAGA,4BAAQA,UAAU,YAAlB,SAIA,uCACA,4BAAQA,UAAU,aAAlB,SAGA,4BAAQA,UAAU,YAAlB,SAGA,4BAAQA,UAAU,aAAlB,UAIF,yBAAKA,UAAU,YACb,4BAAQA,UAAU,QAClB,4BAAQA,UAAU,QAClB,4BAAQA,UAAU,UAClB,4BAAQA,UAAU,SAClB,4BAAQA,UAAU,UAEtB,yBAAKA,UAAU,aACX,4BAAQA,UAAU,QAAlB,kCACA,4BAAQA,UAAU,WAAlB,kCACA,4BAAQA,UAAU,WAAlB,wC,GApEuBoB,aCAhBE,E,kDACjB,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,GAFE,E,qDASf,OACI,oCACH,yBAAKb,UAAU,OACX,yBAAKA,UAAU,UACX,yCAEA,2BAAOA,UAAU,eAAjB,aACL,2BAAOc,KAAK,aACZ,0BAAMd,UAAU,eAEhB,2BAAOA,UAAU,eAAjB,gBACA,2BAAOc,KAAK,aACZ,0BAAMd,UAAU,eAEhB,2BAAOA,UAAU,eAAjB,WACA,2BAAOc,KAAK,WAAYE,UAAQ,IAChC,0BAAMhB,UAAU,yBAKf,yBAAKA,UAAU,UACf,4CACG,2BAAOc,KAAK,QAAST,MAAM,OAAOU,KAAK,WAF1C,QAGG,2BAAOD,KAAK,QAAQT,MAAM,SAASU,KAAK,WAH3C,WAKA,yBAAKf,UAAU,UACf,qCACI,+BACA,+BACA,+BACA,+BACA,sC,GA1CkBoB,a,MCoBpBG,MAbf,WACE,OACE,yBAAKvB,UAAU,OAClB,kBAACH,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNmB2B,QACW,cAA7B9B,OAAO+B,SAASC,UAEe,UAA7BhC,OAAO+B,SAASC,UAEhBhC,OAAO+B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMhC,c","file":"static/js/main.26cee441.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook for handling closing when clicking outside of an element\r\n * @param {React.node} el\r\n * @param {boolean} initialState\r\n */\r\nexport const useDetectOutsideClick = (el, initialState) => {\r\n  const [isActive, setIsActive] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive);\r\n      }\r\n    };\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [isActive, el]);\r\n\r\n  return [isActive, setIsActive];\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\r\n\r\n\r\n\r\n\r\nexport default function Button() {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n  const onClick = () => setIsActive(!isActive);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"menu-container\">\r\n        <div onClick={onClick} className={`menu-trigger ${isActive ? \"outline\" : \"\"}`}>\r\n          <span>سمت/عنوان</span>\r\n      \r\n        </div>\r\n        <nav\r\n          ref={dropdownRef}\r\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n        >\r\n          <ul>\r\n            <li    onClick={onClick} className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 1\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 2\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست3\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\r\n\r\n\r\n\r\n\r\nexport default function Button() {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n  const onClick = () => setIsActive(!isActive);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"menu-container\">\r\n        <div onClick={onClick} className={`menu-trigger ${isActive ? \"outline\" : \"\"}`}>\r\n          <span>سمت/عنوان</span>\r\n      \r\n        </div>\r\n        <nav\r\n          ref={dropdownRef}\r\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n        >\r\n          <ul>\r\n            <li    onClick={onClick} className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 1\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 2\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست3\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\r\n\r\n\r\n\r\n\r\nexport default function Button() {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n  const onClick = () => setIsActive(!isActive);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"menu-container\">\r\n        <div onClick={onClick} className={`menu-trigger ${isActive ? \"outline\" : \"\"}`}>\r\n          <span>سمت/عنوان</span>\r\n      \r\n        </div>\r\n        <nav\r\n          ref={dropdownRef}\r\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n        >\r\n          <ul>\r\n            <li    onClick={onClick} className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 1\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست 2\r\n            </li>\r\n            <li  className={` ${isActive ? \"active\" : \"inactive\"}`}>\r\n              تست3\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class InputSet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            message1: false,\r\n            message: false\r\n        }\r\n    }\r\n    handleChangeCorrect = (e) => {\r\n        if (e.target.value.length >= 0) {\r\n\r\n            this.setState({ message: true })\r\n        }\r\n        if (e.target.value.length === 0) {\r\n\r\n            this.setState({ message: false })\r\n        }\r\n\r\n    }\r\n    handleChangeInCoorect = (e) => {\r\n        if (e.target.value.length >= 0) {\r\n\r\n            this.setState({ message1: true })\r\n        }\r\n        if (e.target.value.length === 0) {\r\n\r\n            this.setState({ message1: false })\r\n        }\r\n        console.log(\"warning\", e.target.value)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"allGroup\">\r\n                <div className=\"\">\r\n                        <input type=\"text\" name=\"name\" className=\"disable \" disabled placeholder='متن خواسته شده' />\r\n\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <input type=\"text\" name=\"name\" className=\"InState \" placeholder='متن خواسته شده' />\r\n\r\n                    </div>\r\n                 \r\n                    <div className=\" message\">\r\n                        <input type=\"text\" onChange={this.handleChangeCorrect} name=\"name\" className={`Correct2 ${this.state.message ? \"Correuct\" : \"\"}`} placeholder='متن خواسته شده' />\r\n                    <p className={` ${this.state.message ? \"Correuct\" : \"\"}`}>{this.state.message ? \"پیغام\" : \"\"}</p>\r\n                    </div>                            \r\n                    <div className=\" message\">\r\n                        <input type=\"text\" onChange={this.handleChangeInCoorect} name=\"name\" className={`InCorrect3 ${this.state.message1 ? \"inCorreuct\" : \"\"}`} placeholder='متن خواسته شده' />\r\n                    \r\n                        <p className={` ${this.state.message1 ? \"inCorreuct\" : \"\"}`}>{this.state.message1 ? \"پیغام\" : \"\"}</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <textarea className=\"TextArea\" placeholder='متن خواسته شده'>\r\n\r\n                </textarea>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Buttons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <div className=\"btnFeilds\">\r\n            <p>primary</p>\r\n              <button className=\"purple\">\r\n                  hover\r\n              </button>\r\n              <button className=\"black\">\r\n                 hover\r\n              </button>\r\n              <button className=\"red\">\r\n                 hover\r\n              </button>\r\n              <button className=\"green\">\r\n                 hover\r\n              </button>\r\n              <button className=\"orange\">\r\n                 hover\r\n              </button>\r\n              <button disabled className=\"disable\">\r\n               \r\n              </button>\r\n            </div>\r\n            <div className=\"btnFeilds\">\r\n            <p>Secondary</p>\r\n           \r\n              <button className=\"SEpurple\">\r\n                  hover\r\n              </button>\r\n           \r\n              <button className=\"SEgreen\">\r\n                 hover\r\n              </button>\r\n              <button className=\"SEorange\">\r\n                 hover\r\n              </button>\r\n              \r\n              <p>Tertiary</p>\r\n              <button className=\"TERpurple\">\r\n                  hover\r\n              </button>\r\n              <button className=\"TERgreen\">\r\n                 hover\r\n              </button>\r\n              <button className=\"TERorange\">\r\n                 hover\r\n              </button>\r\n            </div>\r\n            <div className=\"widthBtn\">\r\n              <button className=\"one\"></button>\r\n              <button className=\"two\"></button>\r\n              <button className=\"three\"></button>\r\n              <button className=\"four\"></button>\r\n              <button className=\"five\"></button>\r\n          </div>\r\n          <div className=\"sendGroup\">\r\n              <button className=\"send\">ارسال</button>\r\n              <button className=\"sendOne\">ارسال</button>\r\n              <button className=\"sendTwo\">ارسال</button>\r\n          </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Forms extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <>\r\n         <div className=\"row\">\r\n             <div className=\"column\">\r\n                 <p>Checkboxes</p>\r\n\r\n                 <label className=\"containerss\">checkboxes\r\n            <input type=\"checkbox\"  />\r\n            <span className=\"checkmark\"></span>\r\n            </label>\r\n            <label className=\"containerss\">indeterminate\r\n            <input type=\"checkbox\" />\r\n            <span className=\"checkmark\"></span>\r\n            </label>\r\n            <label className=\"containerss\">disabled\r\n            <input type=\"checkbox\"  disabled/>\r\n            <span className=\"checkmark disabled\"></span>\r\n            </label>\r\n     \r\n\r\n             </div>\r\n             <div className=\"column\">\r\n             <p>Radio button </p>                               \r\n                <input type=\"radio\"  value=\"male\" name=\"gender\" /> Male\r\n                <input type=\"radio\" value=\"female\" name=\"gender\" /> Female\r\n             </div>\r\n             <div className=\"column\">\r\n             <p>Switch</p>\r\n                 <span></span>\r\n                 <span></span>\r\n                 <span></span>\r\n                 <span></span>\r\n                 <span></span>\r\n             </div>\r\n         </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\nimport Button from './dropDown';\nimport Opration from './newBTN';\nimport Assign from './Assign';\nimport InputSet from './inputPart'\nimport Buttons from './Buttons'\nimport Forms from './Form'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n <Button />\n <Opration/>\n <Assign/>\n <InputSet/>\n <Buttons/>\n <Forms/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}